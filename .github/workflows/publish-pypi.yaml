name: Publish to PyPI
on:
  release:
    types:
      - released
      - prereleased

  workflow_dispatch:
    inputs:
      pypi_repo:
        description: PyPI repository to use
        required: true
        type: choice
        options: ["testpypi", "pypi"]

jobs:
  build:
    runs-on: ubuntu-22.04

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version-file: .github/requirements/python-version.txt

      - name: Install Dependencies
        run: |
          python -m pip install -r .github/requirements/requirements-poetry.txt

      - name: Build sdist and wheel
        run: poetry build --output=./dist

      - name: Upload Build
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  push-tags:
    runs-on: ubuntu-22.04
    environment: publish-tags

    # Only publish tags when it's a release,
    # or when pushing to PyPI production (not test PyPI).
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.pypi_repo == 'pypi')

    permissions:
      contents: write

    needs:
      # Ensure the build succeeds before pushing additional tags.
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - shell: bash
        name: Update Major Version Tag
        run: |
          version="${GITHUB_REF#refs/tags/}"

          # Validate the tag starts with "v<major>.<minor>.<patch>"
          if [[ ! "$version" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "Expected the tag to start with vX.X but found '${version}'" >&2
            exit 1
          fi
          
          # v0.1.0 -> v0
          # v1.2.3 -> v1
          # etc.
          short_tag=$(echo "$version" | cut -d. -f1)
          
          # --force is needed in order to replace the tags.
          # Note: --force-with-lease doesn't work for replacing tags.
          git tag --force "$short_tag"
          git push origin --force "refs/tags/${short_tag}"

  publish:
    runs-on: ubuntu-22.04
    environment: publish-pypi

    needs:
      - build
      - push-tags

    permissions:
      id-token: write  # Required for PyPI trusted publishing

    steps:
      - uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85 # v4.1.3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.pypi_repo == 'pypi')
        uses: pypa/gh-action-pypi-publish@e53eb8b103ffcb59469888563dc324e3c8ba6f06 # v1.8.12

      - name: Publish to TestPyPI
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.pypi_repo == 'testpypi'
        uses: pypa/gh-action-pypi-publish@e53eb8b103ffcb59469888563dc324e3c8ba6f06 # v1.8.12
        with:
          repository-url: https://test.pypi.org/legacy/
